version: '3'
services:
  db:
    build:
      context: .
      dockerfile: .docker/postgres/Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      app_net:
        ipv4_address: 172.16.0.2
    healthcheck:
      test:
          - CMD-SHELL
          - pg_isready
          - -d
          - ${POSTGRES_DB}
          - -U
          - ${POSTGRES_USER}
          - -q
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
  web:
    depends_on:
        db:
            condition: service_healthy
    build:
      context: .
      dockerfile: .docker/production/Dockerfile
      args:
        - STATIC_ROOT=${STATIC_ROOT}
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      app_net:
        ipv4_address: 172.16.0.3
    volumes:
        - /var/www/${STATIC_ROOT}:/var/www/${STATIC_ROOT}
        - /var/www/uploads:/var/www/uploads
        - /var/log/ride_with_me:/var/log/ride_with_me
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      app_net:
        ipv4_address: 172.16.0.4

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "172.16.0.0/24"
        - subnet: "2001:3984:3989::/64"
